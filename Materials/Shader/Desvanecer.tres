[gd_resource type="ShaderMaterial" load_steps=19 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeVectorOp" id=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=7]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeTexture" id=9]
source = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=12]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 1

[sub_resource type="OpenSimplexNoise" id=15]

[sub_resource type="NoiseTexture" id=16]
noise = SubResource( 15 )

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = SubResource( 16 )

[sub_resource type="VisualShader" id=18]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_6;
uniform float alpha;
uniform vec4 Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:19
	vec3 n_out19p0 = vec3(UV, 0.0);

// Texture:18
	vec3 n_out18p0;
	float n_out18p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out19p0.xy);
		n_out18p0 = _tex_read.rgb;
		n_out18p1 = _tex_read.a;
	}

// Texture:21
	vec3 n_out21p0;
	float n_out21p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out21p0 = _tex_read.rgb;
		n_out21p1 = _tex_read.a;
	}

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:22
	vec3 n_out22p0 = vec3(n_out21p1) + n_out6p0;

// ScalarUniform:10
	float n_out10p0 = alpha;

// ScalarOp:23
	float n_in23p1 = 1.50000;
	float n_out23p0 = n_out10p0 - n_in23p1;

// VectorOp:11
	vec3 n_out11p0 = n_out22p0 + vec3(n_out23p0);

// ScalarOp:14
	float n_in14p1 = 0.05000;
	float n_out14p0 = dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)) - n_in14p1;

// ScalarFunc:15
	float n_out15p0 = round(n_out14p0);

// ScalarFunc:13
	float n_out13p0 = 1.0 - n_out15p0;

// ColorUniform:17
	vec3 n_out17p0 = Color.rgb;
	float n_out17p1 = Color.a;

// VectorOp:16
	vec3 n_out16p0 = vec3(n_out13p0) * n_out17p0;

// VectorOp:20
	vec3 n_out20p0 = n_out18p0 + n_out16p0;

// ScalarFunc:12
	float n_out12p0 = round(dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)));

// Output:0
	COLOR.rgb = n_out20p0;
	COLOR.a = n_out12p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( 262, 145 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 180, 80 )
nodes/fragment/0/position = Vector2( 2220, 100 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( 220, -80 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 320, 280 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 780, 140 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 1160, 260 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 1400, -120 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1020, -60 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 1200, -80 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 1747.34, -101.1 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 1420, 100 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 1800, -280 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 1560, -260 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 2000, -220 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 200, -260 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 520, 0 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( 560, 240 )
nodes/fragment/connections = PoolIntArray( 11, 0, 12, 0, 11, 0, 14, 0, 14, 0, 15, 0, 15, 0, 13, 0, 13, 0, 16, 0, 17, 0, 16, 1, 12, 0, 0, 1, 19, 0, 18, 0, 18, 0, 20, 0, 16, 0, 20, 1, 20, 0, 0, 0, 6, 0, 22, 1, 22, 0, 11, 0, 21, 1, 22, 0, 10, 0, 23, 0, 23, 0, 11, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 18 )
shader_param/alpha = 1.0
shader_param/Color = Color( 1, 0.403922, 0.0117647, 1 )
